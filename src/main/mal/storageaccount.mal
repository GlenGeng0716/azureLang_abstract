category System {

    asset StorageAccount extends Resource
        user info: "Storage accounts are classified as blob storage account or general storage account."
    {
    }
    
    asset BlobContainer extends Resource
        user info: "A blob contanier is a virtual environment in Azure's blob storgae service for blob object stroage in a Azure cloud infrastructure."
        {
            | connect
                user info: "The admin can set the access level by either Azure portal of power shell."
                -> blobs.requestAccess,
                   listBlobContainer,
                   deleteContainer
            
            | listBlobContainerPermission @hidden
                user info: "At least one policy grants an attacker-controlled identity permissions to list blobs in the container."
                -> listBlobContainer
                
            | deleteContainerPermission @hidden
                user info: "At least one policy grants an attacker-controlled identity permissions to delete blobs in the container."
                -> deleteContainer
            
            & listBlobContainer
                user info: "An attacher has gained the sufficient permission and network access to list blob containers."
                -> blobs.listPermission
            
            & deleteContainer
                user info: "An attacker has gained the sufficient permissions and network access to delete blob containers."
                -> blobs.deletePermission
                
            | readBlob
                user info: "One or more blobs in the container has been read."
            | writeBlob
                user info: "One or more blobs in the container has been written."
            | deleteBlob
                user info: "One or more blobs in the container has been deleted."
            | listBlob
                user info: "One or more blobs in the container has been listed."
                
        }
    
    asset Blob extends Data
        user info: "Azure Blob storage stores data as blob objects within containers."
        {
            & authenticatedRead
                +> blobContainer.readBlob
            
            & authenticatedWrite
                +> blobContainer.writeBlob
                
            & authenticatedDelete
                +> blobContainer.deleteBlob
                
            & authenticatedList
                +> blobContainer.listBlob
        }
}

category Networking {
    
    asset BlobAPI extends RESTAPI
    {
        | invoke
            user info: "Invoke the blob API by effectively connecting to Blob service over Internet."
            -> blobContainers.connect
    }
}

category Security {
        
    asset ListBlobContainer extends Action
        user info: "GET Container (List blobs), HEAD Container (determine if a container exists and you have the permission to access it)"
        {
            | perform
                -> resources[BlobContainer].listBlobContainerPermission
                
            | performAction
                user info: "Determins if a container exists and if you have access to it."
        }
    
    asset DeleteBlobContainer extends Action
        user info: "Delete Container. All blob objects in the container must be deleted first."
        {
            | perform
                -> resources[BlobContainer].deleteContainerPermission
                
            | performAction
                user info: "Deletes the container and all blobs in it."
        }
    
    asset ReadBlobObjects extends Action
        user info: "Download blobs from Azure Blob containers."
        {
            | perform
                -> resources[Blob].readPermission
            
            | performAction
                user info: "Download blobs in a container"
        }
    
    asset WriteBlobObjects extends Action
        user info: "Upload a blob object to a container."
        {
            | perform
                -> resources[Blob].writePermission
                
            | performAction
                user info: "Write blobs in a container."
        }
    
    asset DeleteBlobObjects extends Action
        user info: "Create new blob objects in a container."
        {
            | perform
                -> resources[Blob].deletePermission
                
            | performAction
                user info: "Removies an object from a container."
        }

}

associations {
    
    BlobAPI [blobAPI] 1 <-- API --> * [blobContainers] BlobContainer
    StorageAccount [storageAccount] 1 <-- Contained --> * [blobContainers] BlobContainer
    BlobContainer [blobContainer] 1 <-- Storage --> * [blobs] Blob
        user info: "The total volum of data and number of blob object you can store in a Blob container are unlimited. Indiidual blobs and range in size form a minimum of 0 bytes to a maximum of 4.75 TB."
}

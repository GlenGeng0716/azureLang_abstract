/*
 * Copyright 2019 Foreseeti AB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


category System {

    abstract asset Role
        user info: "In Role Based Access Control (RBAC) system of Azure, the role that be assigned to a security principal determines who can do what from different scopes."
        {
            | assume

}

    asset Reader extends Role
        user info: "The ReadRole is one of the three basic roles in Azure. It only have read previleges in different scopes."
        {
            | readeraccess
                -> scopes[Subscription].read
       
}
   asset Owner extends Role
    {
        
    
}

   asset Contributor extends Role
    {

}

    
      abstract asset Permission
        user info: "A permission defined in a role definition designates what actions (read, write, delete and other actions) can be taken on where."
      {
        & satisfy
            user info: "The permission has been sucessfully used by the attacker."
            
        | calledByAction
            -> satisfy
}
      asset SubscriptionPermission extends Permission
      {
  //      let applicableActions = subscription*.actionsonsubcription
}
  
    abstract asset Action
        user info: "The action element of a permission descibes the sepecific action."
    {
        
        | performAction
            -> perform
            
        | perform @hidden
}
    
    asset CreateLoginProfile extends Action
        user info: "An attacker can user this permission to create a Azure portal login profile for non-root user."
        {
            | perform
                -> resources[ADUser].attemptCreateLoginProfile
                
            | performAction
                user info: "Create a azure portal login profile for a non-root user."
}

    asset UpdateLoginProfile extends Action
        user info: "An attacker can use this permission to change the existing login password of other users."
        {
            | perform
                -> resources[ADUser].attemptUpdateLoginProfile
                
            | performAction
                user info: "Change the existing login password of other users."
}
  /*  asset DeleteLoginProfile extends Action
        user info: "An attacker can user this permission to delete the existing login password of other users."
        {
            | perform
                -> resources[ADUser].deleteLoginProfile
                
            | performAction
                user info: "Delete the existing login password of other users/"
}
        */

   
    asset SecurityPrincipal extends Resource
        user info: "In Azure, RBAC effects on the security principals. Security principals can be an AD user, an AD group, a managed identity or a service principal."
        {
            
        
}
    asset ADUser extends SecurityPrincipal
        user info: "The root user of Azure can distribute can creat or invite a Active Directory user in order to let them either read, write, delete or do other actions on different scopes of Auzre."
        {
            | assume
                -> principalReader.readeraccess
            
            | attemptCreateLoginProfile
            
            | attemptUpdateLoginProfile
            
        //    | deleteLoginProfile
}
    
    
    
    
 
}

associations {

    SecurityPrincipal [principals] * <-- AssociateReader --> * [principalReader] Reader
            user info: "Assign a reader role on a security principal."
    Owner [principalOwner] * <-- AssociateOwner --> * [principals] SecurityPrincipal
    Contributor [principalContributor] * <-- AssociaterContributor --> * [principals] SecurityPrincipal
    
    Reader [scopeReader] * <-- Read --> * [scopes] Scope
    
    
    
    Permission [permissions] * <-- PermissionAction --> * [actions] Action
        user info: "Permissions in the role definition contains actions."
    
    Subscription [subscription] 0..1 <-- SubscriptionPermssion --> * [subscriptionPermissions] SubscriptionPermission
         
    
        
    Action [subscriptionActions] * <-- ActionsOnSubscrition --> * [subscription] Subscription
        user info: "An action defined from a permission can be performed on a subscription."
    
    Action [resourcegroupActions] * <-- ActionsOnResourceGroups --> * [resourcegroup] ResourceGroup
    
    Action [resourceActions] * <-- ActionsOnResources --> * [resources] Resource
    
    Action [ScopeActions] * <-- ActionsOnScopes --> * [scopes] Scope
    

}



/*
 * Copyright 2019 Foreseeti AB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


category System {

    abstract asset Role
        user info: "In Role Based Access Control (RBAC) system of Azure, the role that be assigned to a security principal determines who can do what from different scopes."
        {
            | assume

}

    asset Reader extends Role
        user info: "The ReadRole is one of the three basic roles in Azure. It only have read previleges in different scopes."
        {
            | readeraccess
                -> scopes[Subscription].read,
                    executees[SubscriptionRead].performAction,
                    scopes[ResourceGroup].read,
                    executees[ResourceGroupRead].performAction,
                    scopes[AzureServiceResource].read,
                    executees[AzureServiceRead].performAction
                   
}
   asset Owner extends Role
    user info: "In RBAC system, if an user has been assigned an owner role, he has the rights to do everything including read, write and delete on the scope that it was assigned. Meanwhile, owner can also grant acess to others, for example, create a login profile to a new Active Directory user."
    {
        | owneraccess
        ->
        // Owneraccess leads to read actions
            scopes[Subscription].read,
            executees[SubscriptionRead].performAction,
            scopes[ResourceGroup].read,
            executees[ResourceGroupRead].performAction,
            scopes[AzureServiceResource].read,
            executees[AzureServiceRead].performAction,
            
        // Owneraccess leads to write actions
            scopes[Subscription].write,
            executees[SubscriptionWrite].performAction,
            scopes[ResourceGroup].write,
            executees[AzureServiceWrite].performAction,
            scopes[AzureServiceResource].write,
            executees[AzureServiceWrite].performAction,
            
            
        // Owneraccess leads to cancel subscription actions and delete resource group actions
            scopes[Subscription].cancel,
            executees[CancelSubscription].performAction,
            scopes[ResourceGroup].delete,
            executees[ResourceGroupDelete].performAction,
            scopes[AzureServiceResource].delete,
            executees[AzureServiceDelete].performAction,
            
        // Owneraccess can grant acess to a new AD user or an existed AD user.
            executees[AddLoginProfile].performAction,
            executees[UpdateLoginProfile].performAction,
            executees[DeleteLoginProfile].performAction
            
}

   asset Contributor extends Role
    user info: "Contributor has exactly the same previleges on the scope like the owner does, except can grant access to a new user."
    {
        | contributoraccess
        ->
        // Contributoreraccess leads to read actions
            scopes[Subscription].read,
            executees[SubscriptionRead].performAction,
            scopes[ResourceGroup].read,
            executees[ResourceGroupRead].performAction,
            scopes[AzureServiceResource].read,
            executees[AzureServiceRead].performAction,
            
        // Contributoraccess leads to write actions
            scopes[Subscription].write,
            executees[SubscriptionWrite].performAction,
            scopes[ResourceGroup].write,
            executees[AzureServiceWrite].performAction,
            scopes[AzureServiceResource].write,
            executees[AzureServiceWrite].performAction,
            
            
        // Contributoraccess leads to cancel subscription actions and delete resource group actions
            scopes[Subscription].cancel,
            executees[CancelSubscription].performAction,
            scopes[ResourceGroup].delete,
            executees[ResourceGroupDelete].performAction,
            scopes[AzureServiceResource].delete,
            executees[AzureServiceDelete].performAction

}

    
      abstract asset Permission
        user info: "A permission defined in a role definition designates what actions (read, write, delete and other actions) can be taken on where."
      {
        & satisfy
            user info: "The permission has been sucessfully used by the attacker."
            
        | calledByAction
            -> satisfy
}

  
    abstract asset Action
        user info: "The action element of a permission descibes the sepecific action."
    {
        
        | performAction
            -> perform
            
        | perform @hidden
}
    
    asset AddLoginProfile extends Action
        user info: "An attacker can user this permission to create a Azure portal login profile for non-root user."
        {
            | perform
                -> resources[ADUser].attemptAddLoginProfile
                
            | performAction
                
}

    asset UpdateLoginProfile extends Action
        user info: "An attacker can use this permission to change the existing login password of other users."
        {
            | perform
                -> resources[ADUser].attemptUpdateLoginProfile
                
            | performAction
                user info: "Change the existing login password of other users."
}
    asset DeleteLoginProfile extends Action
        user info: "An attacker can user this permission to delete the existing login password of other users."
        {
            | perform
                -> resources[ADUser].attemptdeleteLoginProfile
                
            | performAction
                user info: "Delete the existing login password of other users"
}
        
    asset SecurityPrincipal extends Resource
        user info: "In Azure, RBAC effects on the security principals. Security principals can be an AD user, an AD group, a managed identity or a service principal."
        {
        
}
    asset ADUser extends SecurityPrincipal
        user info: "The root user of Azure can distribute can creat or invite a Active Directory user in order to let them either read, write, delete or do other actions on different scopes of Auzre."
        {
    
            | assume
                -> principalReader.readeraccess,
                    principalOwner.owneraccess,
                    principalContributor.contributoraccess
            
            | attemptAddLoginProfile
                -> createLoginProfile
            
            | attemptUpdateLoginProfile
                -> LoginProfileUpdated
            
            | attemptdeleteLoginProfile
                -> LoginProfileDeleted
            
            | createLoginProfile
                user info: "Crate a new login profile for this user, and use it to assum this user."
                -> assume
                
            | LoginProfileUpdated
            
            | LoginProfileDeleted
}

    asset ManagedIdentity extends SecurityPrincipal
        user info: "The managed identities for Azure resources feature in Azure Active Directory (Azure AD) solves this problem. The feature provides Azure services with an automatically managed identity in Azure AD. "
        developer info: "https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/"
        {
        
        
        }
    
    
    
    
 
}

associations {

    SecurityPrincipal [principals] * <-- AssociateReader --> * [principalReader] Reader
            user info: "Assign a reader role on a security principal."
    Owner [principalOwner] * <-- AssociateOwner --> * [principalOwner] SecurityPrincipal
    Contributor [principalContributor] * <-- AssociaterContributor --> * [principalContributor] SecurityPrincipal
    
    Reader [scopeReader] * <-- Read --> * [scopes] Scope
    Owner [scopeOwner] * <-- Own --> * [scopes] Scope
    Contributor [scopeContributor] * <-- Contribute --> * [scopes] Scope
    
    
    
    Permission [permissions] * <-- PermissionAction --> * [actions] Action
        user info: "Permissions in the role definition contains actions."
                     
    Action [subscriptionActions] * <-- ActionsOnSubscrition --> * [subscription] Subscription
        user info: "An action defined from a permission can be performed on a subscription."
    
    Action [resourcegroupActions] * <-- ActionsOnResourceGroups --> * [resourcegroup] ResourceGroup
    
    Action [resourceActions] * <-- ActionsOnResources --> * [azureresources] AzureServiceResource
    
    Action [scopeActions] * <-- ActionsOnScopes --> * [scopes] Scope
    
    Action [ResourceActions] * <-- ActionOnResources --> * [resources] Resource
    
    SecurityPrincipal [principals] * <-- SecurityPrincipalScope --> * [scopes] Scope
        
    Action [executees] * <-- Execution --> * [executors] Role

}

/*
 * Copyright 2019 Foreseeti AB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


category System {

  abstract asset Scope
    user info: "Azure has a hierachical structure. Different scopes can be subscription, resource group and a single resource."
  {
  
}

  asset Subscription extends Scope
    user info: "Any azure account must have a azure subscription in order to use Azure services "
    {
        
        & access
            user info: "The Azure subscription has been accessed by an attacker."
                -> resourcegroup.access
                
        & cancel
            user info: "The subscription has been canceled by an attacker on purpose."
                -> resourcegroup.delete
            
        & read
            user info: "Read a current subscription"
                -> resourcegroup.read
                
        & write
            user info: "Add a new subscription."
                -> resourcegroup.write
            

            
        
            
    }

  asset ResourceGroup extends Scope
    user info: "In Azure, when creating a resource it must be assigned to a resource group."
    {
        & access
            user info: "Access to the ResourceGroup will lead to the possible attack steps such as read, write and delete."
            -> resource[VirtualMachine].connect
            
        & write
            -> azureResources.write
        
        & delete
        
            -> azureResources.delete,
                resource[VirtualMachine].terminate
        
        & read
            -> azureResources.read
            
        
    }
  
  abstract asset Resource extends Scope
    user info: "In azure, basically anything can be classified as a type of resource."
    {
    
}
   
     asset AzureServiceResource extends Resource
        user info: "Azure provides different kinds of services in a cloud computing environment: Computing, AI, Storage, etc."
        {
        
        & read
        
        & write
        
        & delete
        
        & access
        
}
  
}

category Communication {

    asset Information
        user info: "Information can be stored as data and transmitted in data flows. Data and data flows are syntactic forms of the semantics represneted by the Information asset. Thus, multiple data and data flow assets can contain the same information."
        {
        | read
            user info: "When information is read by the attacker, any associated confidentiality costs are incurred. It is sufficient that the attacker reads a single data or data flow to breach confidentiality."
        
        & write
            user info: "When information is written by the attacker, any associated integrity costs are incurred. The attacker must, however, compromise all data and data flow in order to breach integrity. Therefore, if the records of an ATM are modified, this might incur no cost as long as the master data is untouched."
        
        & delete
            user info: "When information is deleted by the attacker, any associated availability costs are incurred. The attacker must, however, delete all data and data flows in order to breach integrity. Thus if malware wipes a hard drive, this might incur no cost as long as a backup is easily accessible."
        }
    
    asset Data
        user info: "Data is a concrete, syntactic representation of Information at rest."
        {
        | requestAccess
            user info: "When stored on a machine, access control needs to be granted."
            -> authenticatedRead,
                authenticatedWrite,
                authenticatedDelete
        
        | anyAccountRead
            user info: "A single account with read privileges (in conjunction with data access) is enough to read the data."
            -> authenticatedRead
        
        | anyAccountWrite
            user info: "A signle account with write privileges (in conjunction with data access) is enough to write the data."
            -> authenticatedRead
            
        | anyAccountDelete
            user info: "A single account with delete privileges (in conjunction with data access) is enough to delete the data."
            -> authenticatedDelete
            
        & authenticatedRead
            user info: "Access and authentication will allow reading of data."
            -> read
        
        & authenticatedWrite
            user info: "Access and authentication will allow writing of data."
            -> write
        
        & authenticatedDelete
            user info: "Access and authentication will allow deleting of data."
            -> delete
            
        | read
            user info: "An attacker that reads the data and learns the encoded information."
            -> information.read,
                containedData.read
                
        | write
            user info: "An attacker that writes the data."
            -> information.write,
                containedData.write
        
        | delete
            user info: "An attacker that deletes the data."
            -> information.delete,
                containedData.delete
}

}

category Security

{
    
    asset Account
        user info: "The owner of Azure account. He/She will automatically be the global adminstrator and has the right to create or invite users in Active directory."
    {
        | getaccount
            user info: "In order to log into the Azure portal, people need to get an Azure account. The account bould be signed up (The first signed up account will the owner of all Azure resources and the global admin of Azure AD.) or be assigned one from Azure AD."
            -> assume
        
        & assume
        user info: "Assume the azure acount."
            -> subscription.access
        
    }

    asset Password
    {
        | attemptAccess
            -> passwordTheft
        
        | passwordTheft [Exponential(0.001)]
            -> access
            
        | access @hidden
            -> account.assume
    }
    
    asset SubscriptionRead extends Action
        user info: "The SubscriptionRead action is the action that a reader, contributor or owner can read everything under the subscription."
        developer info: "Reference: https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#general"
    {
        | perform
            -> scopes[Subscription].read
        
        | performAction
        user info: "Perform read action on the scope of subscription."
    
}

    asset SubscriptionWrite extends Action
        user info: "The SubscriptionWrite action is the action that a contributor or an owner can modify the content in the subscription."
        developer info: "Reference: https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles#general"
        {
           | perform
                -> scopes[Subscription].write
           
           | performAction
           user info: "Perform write action in the scope of subscription."
            
}

    asset CancelSubscription extends Action
               user info: "Cancels the Subcscription."
           {
               | perform
                   -> scopes[Subscription].cancel
                   
               | performAction
                   user info: "Cacel a subscription"
           
}
    
    asset ResourceGroupRead extends Action
        user info: "The ResourceGroupRead action is the action that a reader/owner/contributor of the subscription can read all the resource in a resource group."
        {
            | perform
                -> scopes[ResourceGroup].read
                
            | performAction
}

    asset ResourceGroupWrite extends Action
        user info: "The ResourceGroupWrite action is the action that an owner or an contributor can create or modify all the resources in a resource group."
        {
            | perform
                -> scopes[ResourceGroup].write
                
            | performAction
}

    asset ResourceGroupDelete extends Action
        user info: "The ResourceGroupDelete action is the action that an owner or an contributor can delete a resource group and the resources contained in the group will be deleted at the same time."
        {
            | perform
                -> scopes[ResourceGroup].delete
                
            | performAction
}


    asset AzureServiceRead extends Action
        user info: "The Azure Service resource will be read. For exmaple configuration and setting of a Virtual Machine will be read or what kinds of data contained in a blob container will be read."
        {
            | perform
                -> scopes[AzureServiceResource].read
                
            | performAction
}

    asset AzureServiceWrite extends Action
        user info: "The Azure Service resource will be writed. An attacker can change the setting of a virtual machine, IP address and subnets in a virtual network, rules network security group and so on. "
        {
            | perform
                -> scopes[AzureServiceResource].write
                
            | performAction
}

    asset AzureServiceDelete extends Action
        user info: "The Azure Service will be deleted by the attacker which make the service no longer usable."
        {
            | perform
                -> scopes[AzureServiceResource].delete
                
            | performAction
}
    

}




associations {

// Account, subscription and resource group
    Account [account] 1 <-- Link --> 1 [password] Password
    Account [account] 1 <-- SubscriptionContainment --> * [subscription] Subscription
    user info: "Every Azure account needs to have a password which allow a person to log into the Azure portal. Under an Azure account, there could be several subscriptions. Subcriptions have different types, for example, free trail, pay-as-you-go and so on."
    Subscription [subscription] 1 <-- ResourcegroupContainment --> * [resourcegroup] ResourceGroup
    ResourceGroup [testresourceGroup] 1 <-- abstractresourceContainment --> * [azureResources] AzureServiceResource
    ResourceGroup [resourceGroup] 1 <-- resourceContainment --> * [resource] Resource
//Data and information
    Data [data] * <-- Representation --> 1 [information] Information
    Data [containingData] * <-- Containment --> * [containedData] Data


}

/*
 * Copyright 2019 Foreseeti AB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


category System {

  asset Subscription
    user info: "Any azure account must have a azure subscription in order to "
    {
        & access
            user info: "The Azure subscription has been accessed by an attacker."
            
    }

  asset ResourceGroup
    user info: "In Azure, when creating a resource it must be assigned to a resource group."
    {
        | access
            user info: "Access to the ResourceGroup"
            -> addresource, delete
            
        | addresource
        
        | delete
        
    }
  
  abstract asset resource
    user info: "In azure, basically anything can be classified as a type of resource."
    {
        | access
    }
  
}

category Communication {

    asset Information
        user info: "Information can be stored as data and transmitted in data flows. Data and data flows are syntactic forms of the semantics represneted by the Information asset. Thus, multiple data and data flow assets can contain the same information."
        {
        | read
            user info: "When information is read by the attacker, any associated confidentiality costs are incurred. It is sufficient that the attacker reads a single data or data flow to breach confidentiality."
        
        & write
            user info: "When information is written by the attacker, any associated integrity costs are incurred. The attacker must, however, compromise all data and data flow in order to breach integrity. Therefore, if the records of an ATM are modified, this might incur no cost as long as the master data is untouched."
        
        & delete
            user info: "When information is deleted by the attacker, any associated availability costs are incurred. The attacker must, however, delete all data and data flows in order to breach integrity. Thus if malware wipes a hard drive, this might incur no cost as long as a backup is easily accessible."
        }
    
    asset Data
        user info: "Data is a concrete, syntactic representation of Information at rest."
        {
        | requestAccess
            user info: "When stored on a machine, access control needs to be granted."
            -> authenticatedRead,
                authenticatedWrite,
                authenticatedDelete
        
        | anyAccountRead
            user info: "A single account with read privileges (in conjunction with data access) is enough to read the data."
            -> authenticatedRead
        
        | anyAccountWrite
            user info: "A signle account with write privileges (in conjunction with data access) is enough to write the data."
            -> authenticatedRead
            
        | anyAccountDelete
            user info: "A single account with delete privileges (in conjunction with data access) is enough to delete the data."
            -> authenticatedDelete
            
        & authenticatedRead
            user info: "Access and authentication will allow reading of data."
            -> read
        
        & authenticatedWrite
            user info: "Access and authentication will allow writing of data."
            -> write
        
        & authenticatedDelete
            user info: "Access and authentication will allow deleting of data."
            -> delete
            
        | read
            user info: "An attacker that reads the data and learns the encoded information."
            -> information.read,
                containedData.read
                
        | write
            user info: "An attacker that writes the data."
            -> information.write,
                containedData.write
        
        | delete
            user info: "An attacker that deletes the data."
            -> information.delete,
                containedData.delete
}

}

category Security

{
    
    asset Account
    {
        | assume
        user info: "Assume the azure acount."
            -> subscription.access
        
    }

    asset Password
    {
        | attemptAccess
            -> passwordTheft
        
        | passwordTheft [Exponential(0.001)]
            -> access
            
        | access @hidden
            -> account.assume
    }

}




associations {
    Account [account] 1 <-- accountsubscription --> * [subscription] Subscription
    Account [account] 1 <-- Link --> 1 [password] Password
    Data [data] * <-- Representation --> 1 [information] Information
    Data [containingData] * <-- Containment --> * [containedData] Data
}
